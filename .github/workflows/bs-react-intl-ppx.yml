name: Build bs-react-intl-ppx

on: [push, pull_request]

defaults:
  run:
    shell: bash

jobs:
  test_and_build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - uses: actions/checkout@v2

      - run: npm install -g esy@0.6.6

      - name: Try to restore install cache
        uses: actions/cache@v1
        with:
          path: ~/.esy/source
          key: source-${{ hashFiles('**/index.json') }}

      - name: Install
        run: esy install

      - name: Print esy cache
        id: print_esy_cache
        run: |
          node .github/workflows/print_esy_cache.js

      - name: Try to restore build cache
        id: deps-cache-macos
        uses: actions/cache@v1
        with:
          path: ${{ steps.print_esy_cache.outputs.esy_cache }}
          key: build-${{ matrix.os }}-${{ hashFiles('**/index.json') }}
          restore-keys: build-${{ matrix.os }}-

      - name: Build
        run: esy build

      - name: "[Test] esy install"
        run: esy install
        working-directory: test

      - name: "[Test] esy build"
        run: esy build
        working-directory: test

      - name: "[Test] yarn install"
        run: yarn install
        working-directory: test

      - name: "[Test] yarn build"
        run: yarn build
        working-directory: test

      - name: Generate ppx binaries
        run: esy release-static

      - name: Upload artifacts ${{ matrix.os }}
        # if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: _build/default/bin/BsReactIntlPpxBin.exe

      - name: Cleanup
        run: |
          # Cleanup build cache in case dependencies have changed
          esy cleanup .

  prepublish:
    needs: test_and_build
    # if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/')
    name: Prepublish ppx artifacts
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Download linux artifacts
        if: success()
        uses: actions/download-artifact@v2
        with:
          name: ubuntu-latest
          path: binaries/linux

      - name: Download macOS artifacts
        if: success()
        uses: actions/download-artifact@v2
        with:
          name: macos-latest
          path: binaries/darwin

      - name: Download windows artifacts
        if: success()
        uses: actions/download-artifact@v2
        with:
          name: windows-latest
          path: binaries/windows

      - name: Move artifacts
        if: success()
        run: |
          mkdir -p exe
          ls -la binaries
          ls -la binaries/darwin
          mv binaries/darwin/BsReactIntlPpxBin.exe exe/bs-react-intl-ppx-darwin-x64.exe
          mv binaries/windows/BsReactIntlPpxBin.exe exe/bs-react-intl-ppx-win-x64.exe
          mv binaries/linux/BsReactIntlPpxBin.exe exe/bs-react-intl-ppx-linux-x64.exe

      - name: Upload artifacts ${{ matrix.os }}
        # if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v2
        with:
          name: Release
          path: bs-react-intl-ppx
